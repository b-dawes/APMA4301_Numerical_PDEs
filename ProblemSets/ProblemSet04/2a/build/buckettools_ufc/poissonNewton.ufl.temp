# Function elements declaration for System: poisson
# Element declaration for Function: u
u_e = FiniteElement("CG", triangle, 1)

# System element is not mixed
us_e = u_e

# Test space declaration for Function: u
u_t = TestFunction(u_e)
# Test space declaration for System: poisson
us_t = u_t

# Trial space declaration for Function: u
u_a = TrialFunction(u_e)
# Trial space declaration for System: poisson
us_a = u_a

# Value declaration for Function: u
u = Coefficient(u_e)
# Value declaration for System: poisson
us = u

# Last iteration value declaration for Function: u
u_i = Coefficient(u_e)
# Last iteration value declaration for System: poisson
us_i = u_i

# Previous time-level value declaration for Function: u
u_n = Coefficient(u_e)
# Previous time-level value declaration for System: poisson
us_n = u_n

# Coefficient declaration for Constant: RHS
f = Constant(triangle)
f_i = Constant(triangle)
f_n = Constant(triangle)

# Declaring special coefficients, such as the timestep.


# Finished declaring functions for this system, start on other systems.


# Finished declaring functions for all other systems, start on forms.

# Form declaration for form: Residual
F = (inner(grad(u_t),grad(u_i))-u_t*f)*dx

# Form declaration for form: Jacobian
J = derivative(F,us_i,us_a)


# Declare potentially non-default form names to be accessible
forms = [F, J]

# Produced by: /home/tfuser/Work/TerraFERMA/bin/systemwrappers_from_options /media/sf_Numerical_PDE_VM_Shared_Folder/repos/git/apma4301_2014_dawes_brian/ProblemSets/ProblemSet04/poisson.tfml
