<?xml version="1.0" encoding="utf-8" ?>
<terraferma_options>
    <geometry>
        <dimension>
            <integer_value rank="0">2</integer_value>
        </dimension>
        <mesh name="Mesh">
            <source name="UnitSquare">
                <number_cells>
                    <integer_value rank="1" shape="2" dim1="2">16 16</integer_value>
                </number_cells>
                <diagonal>
                    <string_value>right/left</string_value>
                </diagonal>
                <cell>
                    <string_value>triangle</string_value>
                </cell>
            </source>
        </mesh>
    </geometry>
    <io>
        <output_base_name>
            <string_value lines="1">poisson</string_value>
        </output_base_name>
        <visualization>
            <element name="P1">
                <family>
                    <string_value>CG</string_value>
                </family>
                <degree>
                    <integer_value rank="0">1</integer_value>
                </degree>
            </element>
        </visualization>
        <dump_periods></dump_periods>
        <detectors></detectors>
    </io>
    <global_parameters></global_parameters>
    <system name="Poisson">
        <mesh name="Mesh"></mesh>
        <ufl_symbol>
            <string_value lines="1">us</string_value>
        </ufl_symbol>
        <field name="u">
            <ufl_symbol>
                <string_value lines="1">u</string_value>
            </ufl_symbol>
            <type name="Function">
                <rank name="Scalar" rank="0">
                    <element name="P2">
                        <family>
                            <string_value>CG</string_value>
                        </family>
                        <degree>
                            <integer_value rank="0">2</integer_value>
                        </degree>
                    </element>
                    <initial_condition name="WholeMesh" type="initial_condition">
                        <constant>
                            <real_value rank="0">0</real_value>
                        </constant>
                    </initial_condition>
                    <boundary_condition name="homogeneous">
                        <boundary_ids>
                            <integer_value rank="1" shape="3">1 3 4</integer_value>
                        </boundary_ids>
                        <sub_components name="All">
                            <type name="Dirichlet" type="boundary_condition">
                                <python rank="0">
                                    <string_value lines="20" type="code" language="python">from math import exp&#x0A;def val(x):&#x0A;  global exp&#x0A;  return exp(x[0] + x[1]/2.)</string_value>
                                </python>
                            </type>
                        </sub_components>
                    </boundary_condition>
                </rank>
            </type>
            <diagnostics>
                <include_in_visualization></include_in_visualization>
                <include_in_statistics>
                    <functional name="L2NormErrorSquared">
                        <string_value lines="20" type="code" language="python">e2 = (u-ue)**2*dx</string_value>
                        <ufl_symbol>
                            <string_value lines="1">e2</string_value>
                        </ufl_symbol>
                        <quadrature_rule name="default"></quadrature_rule>
                    </functional>
                </include_in_statistics>
                <include_residual_in_visualization></include_residual_in_visualization>
            </diagnostics>
        </field>
        <coefficient name="f">
            <ufl_symbol>
                <string_value lines="1">f</string_value>
            </ufl_symbol>
            <type name="Expression">
                <rank name="Scalar" rank="0">
                    <element name="P2">
                        <family>
                            <string_value>CG</string_value>
                        </family>
                        <degree>
                            <integer_value rank="0">2</integer_value>
                        </degree>
                    </element>
                    <value name="WholeMesh" type="value">
                        <python rank="0">
                            <string_value lines="20" type="code" language="python">from math import exp&#x0A;def val(x):&#x0A;  global exp&#x0A;  return -5./4.*exp(x[0] + x[1]/2.)</string_value>
                        </python>
                    </value>
                </rank>
            </type>
            <diagnostics></diagnostics>
        </coefficient>
        <coefficient name="g">
            <ufl_symbol>
                <string_value lines="1">g</string_value>
            </ufl_symbol>
            <type name="Expression">
                <rank name="Scalar" rank="0">
                    <element name="P2">
                        <family>
                            <string_value>CG</string_value>
                        </family>
                        <degree>
                            <integer_value rank="0">2</integer_value>
                        </degree>
                    </element>
                    <value name="WholeMesh" type="value">
                        <python rank="0">
                            <string_value lines="20" type="code" language="python">from math import exp&#x0A;def val(x):&#x0A;  global exp&#x0A;  return exp(x[0] + x[1]/2.)</string_value>
                        </python>
                    </value>
                </rank>
            </type>
            <diagnostics></diagnostics>
        </coefficient>
        <coefficient name="AnalyticSolution">
            <ufl_symbol>
                <string_value lines="1">ue</string_value>
            </ufl_symbol>
            <type name="Expression">
                <rank name="Scalar" rank="0">
                    <element name="P2">
                        <family>
                            <string_value>CG</string_value>
                        </family>
                        <degree>
                            <integer_value rank="0">2</integer_value>
                        </degree>
                    </element>
                    <value name="WholeMesh" type="value">
                        <python rank="0">
                            <string_value lines="20" type="code" language="python">from math import exp&#x0A;def val(x):&#x0A;  global exp&#x0A;  return exp(x[0] + x[1]/2.)</string_value>
                        </python>
                    </value>
                </rank>
            </type>
            <diagnostics></diagnostics>
        </coefficient>
        <nonlinear_solver name="SNES">
            <type name="SNES">
                <form name="Residual" rank="0">
                    <string_value lines="20" type="code" language="python">F = (inner(grad(u_t),grad(u_i)) - u_t*f)*dx - u_t*g*ds</string_value>
                    <ufl_symbol>
                        <string_value lines="1">F</string_value>
                    </ufl_symbol>
                </form>
                <form name="Jacobian" rank="1">
                    <string_value lines="20" type="code" language="python">J = derivative(F,us_i,us_a)</string_value>
                    <ufl_symbol>
                        <string_value lines="1">J</string_value>
                    </ufl_symbol>
                </form>
                <quadrature_rule name="default"></quadrature_rule>
                <snes_type name="ls">
                    <ls_type name="cubic"></ls_type>
                    <convergence_test name="default"></convergence_test>
                </snes_type>
                <relative_error>
                    <real_value rank="0">1e-07</real_value>
                </relative_error>
                <absolute_error>
                    <real_value rank="0">1e-16</real_value>
                </absolute_error>
                <max_iterations>
                    <integer_value rank="0">20</integer_value>
                </max_iterations>
                <monitors>
                    <view_snes></view_snes>
                    <residual></residual>
                </monitors>
                <linear_solver>
                    <iterative_method name="preonly"></iterative_method>
                    <preconditioner name="lu">
                        <factorization_package name="umfpack"></factorization_package>
                    </preconditioner>
                </linear_solver>
                <never_ignore_solver_failures></never_ignore_solver_failures>
            </type>
        </nonlinear_solver>
        <solve name="in_timeloop"></solve>
    </system>
    <system name="Error">
        <mesh name="Mesh"></mesh>
        <ufl_symbol>
            <string_value lines="1">uerr</string_value>
        </ufl_symbol>
        <field name="error">
            <ufl_symbol>
                <string_value lines="1">e</string_value>
            </ufl_symbol>
            <type name="Function">
                <rank name="Scalar" rank="0">
                    <element name="P2">
                        <family>
                            <string_value>CG</string_value>
                        </family>
                        <degree>
                            <integer_value rank="0">2</integer_value>
                        </degree>
                    </element>
                    <initial_condition name="WholeMesh" type="initial_condition">
                        <constant>
                            <real_value rank="0">0</real_value>
                        </constant>
                    </initial_condition>
                </rank>
            </type>
            <diagnostics>
                <include_in_visualization></include_in_visualization>
            </diagnostics>
        </field>
        <nonlinear_solver name="solver">
            <type name="SNES">
                <form name="Residual" rank="0">
                    <string_value lines="20" type="code" language="python">F = e_t*(e_i - (u_i - ue))*dx</string_value>
                    <ufl_symbol>
                        <string_value lines="1">F</string_value>
                    </ufl_symbol>
                </form>
                <form name="Jacobian" rank="1">
                    <string_value lines="20" type="code" language="python">J = derivative(F,e_i,e_a)</string_value>
                    <ufl_symbol>
                        <string_value lines="1">J</string_value>
                    </ufl_symbol>
                </form>
                <quadrature_rule name="default"></quadrature_rule>
                <snes_type name="ksponly"></snes_type>
                <relative_error>
                    <real_value rank="0">1e-10</real_value>
                </relative_error>
                <absolute_error>
                    <real_value rank="0">1e-20</real_value>
                </absolute_error>
                <max_iterations>
                    <integer_value rank="0">20</integer_value>
                </max_iterations>
                <monitors></monitors>
                <linear_solver>
                    <iterative_method name="cg">
                        <relative_error>
                            <real_value rank="0">1e-10</real_value>
                        </relative_error>
                        <max_iterations>
                            <integer_value rank="0">20</integer_value>
                        </max_iterations>
                        <zero_initial_guess></zero_initial_guess>
                        <monitors></monitors>
                    </iterative_method>
                    <preconditioner name="sor"></preconditioner>
                </linear_solver>
                <never_ignore_solver_failures></never_ignore_solver_failures>
            </type>
        </nonlinear_solver>
        <solve name="in_timeloop"></solve>
    </system>
</terraferma_options>
